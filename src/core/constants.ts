/**
 * UDS Protocol Constants according to ISO 14229-1
 */

// UDS Service IDs
export enum ServiceId {
  DIAGNOSTIC_SESSION_CONTROL = 0x10,
  ECU_RESET = 0x11,
  CLEAR_DIAGNOSTIC_INFORMATION = 0x14,
  READ_DTC_INFORMATION = 0x19,
  READ_DATA_BY_IDENTIFIER = 0x22,
  READ_MEMORY_BY_ADDRESS = 0x23,
  READ_SCALING_DATA_BY_IDENTIFIER = 0x24,
  SECURITY_ACCESS = 0x27,
  COMMUNICATION_CONTROL = 0x28,
  READ_DATA_BY_PERIODIC_IDENTIFIER = 0x2A,
  DYNAMICALLY_DEFINE_DATA_IDENTIFIER = 0x2C,
  WRITE_DATA_BY_IDENTIFIER = 0x2E,
  WRITE_MEMORY_BY_ADDRESS = 0x2F,
  ROUTINE_CONTROL = 0x31,
  REQUEST_DOWNLOAD = 0x34,
  REQUEST_UPLOAD = 0x35,
  TRANSFER_DATA = 0x36,
  REQUEST_TRANSFER_EXIT = 0x37,
  REQUEST_FILE_TRANSFER = 0x38,
  WRITE_DATA_BY_PERIODIC_IDENTIFIER = 0x3D,
  TESTER_PRESENT = 0x3E,
  CONTROL_DTC_SETTING = 0x85,
}

// Positive response offset
export const POSITIVE_RESPONSE_OFFSET = 0x40;

// Negative Response Code (NRC)
export enum NegativeResponseCode {
  GENERAL_REJECT = 0x10,
  SERVICE_NOT_SUPPORTED = 0x11,
  SUB_FUNCTION_NOT_SUPPORTED = 0x12,
  INCORRECT_MESSAGE_LENGTH_OR_INVALID_FORMAT = 0x13,
  RESPONSE_TOO_LONG = 0x14,
  BUSY_REPEAT_REQUEST = 0x21,
  CONDITIONS_NOT_CORRECT = 0x22,
  REQUEST_SEQUENCE_ERROR = 0x24,
  REQUEST_OUT_OF_RANGE = 0x31,
  SECURITY_ACCESS_DENIED = 0x33,
  INVALID_KEY = 0x35,
  EXCEED_NUMBER_OF_ATTEMPTS = 0x36,
  REQUIRED_TIME_DELAY_NOT_EXPIRED = 0x37,
  UPLOAD_DOWNLOAD_NOT_ACCEPTED = 0x70,
  TRANSFER_DATA_SUSPENDED = 0x71,
  GENERAL_PROGRAMMING_FAILURE = 0x72,
  WRONG_BLOCK_SEQUENCE_COUNTER = 0x73,
  REQUEST_CORRECTLY_RECEIVED_RESPONSE_PENDING = 0x78,
  SUB_FUNCTION_NOT_SUPPORTED_IN_ACTIVE_SESSION = 0x7E,
  SERVICE_NOT_SUPPORTED_IN_ACTIVE_SESSION = 0x7F,
}

// Diagnostic Session Types
export enum DiagnosticSessionType {
  DEFAULT_SESSION = 0x01,
  PROGRAMMING_SESSION = 0x02,
  EXTENDED_DIAGNOSTIC_SESSION = 0x03,
  SAFETY_SYSTEM_DIAGNOSTIC_SESSION = 0x04,
}

// ECU Reset Types
export enum ECUResetType {
  HARD_RESET = 0x01,
  KEY_OFF_ON_RESET = 0x02,
  SOFT_RESET = 0x03,
  ENABLE_RAPID_POWER_SHUTDOWN = 0x04,
  DISABLE_RAPID_POWER_SHUTDOWN = 0x05,
}

// Security Access Types
export enum SecurityAccessType {
  REQUEST_SEED = 0x01,
  SEND_KEY = 0x02,
  REQUEST_SEED_LEVEL_3 = 0x03,
  SEND_KEY_LEVEL_3 = 0x04,
}

// Routine Control Types
export enum RoutineControlType {
  START_ROUTINE = 0x01,
  STOP_ROUTINE = 0x02,
  REQUEST_ROUTINE_RESULTS = 0x03,
}

// DTC Status Mask
export enum DTCStatusMask {
  TEST_FAILED = 0x01,
  TEST_FAILED_THIS_OPERATION_CYCLE = 0x02,
  PENDING_DTC = 0x04,
  CONFIRMED_DTC = 0x08,
  TEST_NOT_COMPLETED_SINCE_LAST_CLEAR = 0x10,
  TEST_FAILED_SINCE_LAST_CLEAR = 0x20,
  TEST_NOT_COMPLETED_THIS_OPERATION_CYCLE = 0x40,
  WARNING_INDICATOR_REQUESTED = 0x80,
}

// Communication Control Types
export enum CommunicationControlType {
  ENABLE_RX_AND_TX = 0x00,
  ENABLE_RX_AND_DISABLE_TX = 0x01,
  DISABLE_RX_AND_ENABLE_TX = 0x02,
  DISABLE_RX_AND_TX = 0x03,
}

// Data Identifiers (Examples)
export enum DataIdentifier {
  VEHICLE_SPEED = 0x010D,
  ENGINE_RPM = 0x010C,
  ECU_SERIAL_NUMBER = 0xF18C,
  VIN = 0xF190,
  ECU_HARDWARE_VERSION = 0xF191,
  ECU_SOFTWARE_VERSION = 0xF195,
  SYSTEM_SUPPLIER_ID = 0xF18A,
}
